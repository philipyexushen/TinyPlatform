<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
				xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
				xmlns:local="clr-namespace:UrgencyRescuePlatform"
				xmlns:gmap="clr-namespace:GMap.NET.WindowsPresentation;assembly=GMap.NET.WindowsPresentation"
				xmlns:gMapCore="clr-namespace:GMap.NET;assembly=GMap.NET.Core"
				xmlns:r="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
				xmlns:ctb="clr-namespace:ControlsButtonLib;assembly=ControlsButtonLib"
				xmlns:sys="clr-namespace:System;assembly=mscorlib"
				
				x:Class="UrgencyRescuePlatform.MainWindow"
				mc:Ignorable="d"
				Name="platformWindow"
				Height="800" Width="1348"
				Title="TinyPlatform"
				Icon="icon.ico"
				WindowStyle="None" AllowsTransparency="True"
				Background="Transparent" >
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/UrgencyRescuePlatform;component/RibbonIcons.xaml"/>
				<ResourceDictionary Source="/UrgencyRescuePlatform;component/ControlsDict.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<SolidColorBrush x:Key="backgroundColor" Color="#FF4E4E4E"/>
			<SolidColorBrush x:Key="menuBackgroundColor" Color="#FF1B1B1C"/>

			<local:TypeConveter x:Key="typeConverter"/>
			<local:NegationConverter x:Key="negationConverter"/>
			<local:TreeViewItemImageConvrter x:Key="treeViewItemImageConvrter"/>
			<local:IsExistInMapConverter x:Key="isExistInMapConverter"/>
			<local:IsLoginConverter x:Key="isLoginConverter"/>

			<ContextMenu x:Key="_contextMenu_mapItems" 
									 Style="{StaticResource DefaultMenu}"
									Background="{StaticResource menuBackgroundColor}"
									SnapsToDevicePixels="True">
				<MenuItem x:Name="_menuItem_clearItems" Header="清除此项" Click="_menuItem_clearItems_Click"
									IsEnabled="{Binding Path=IsPlatformItem,Converter={StaticResource negationConverter}}"/>
			</ContextMenu>

			<ContextMenu x:Key="_contextMenu_markerItems" 
									 Style="{StaticResource DefaultMenu}"
									Background="{StaticResource menuBackgroundColor}"
									SnapsToDevicePixels="True">
				<MenuItem x:Name="claerMarkerItem" Header="清除标志" Click="claerMarkerItem_Click"
												IsEnabled="{Binding Path=IsExistInMap}"/>
				<MenuItem x:Name="reAddMarkerItem" Header="重新添加标志" Click="reAddMarkerItem_Click"
												IsEnabled="{Binding Path=IsExistInMap,Converter={StaticResource negationConverter}}"/>
				<MenuItem x:Name="destroyMarkerItem" Header="销毁此标志"
												Click="destroyMarkerItem_Click"/>
			</ContextMenu>

			<sys:Double x:Key="itemImageSize">18</sys:Double>

			<SolidColorBrush x:Key="treeViewItemForeGround" Color="White"/>
			<sys:Double x:Key="treeViewItemFontSize">13</sys:Double>
			<sys:Double x:Key="treeViewHeaderItemFontSize">14</sys:Double>

			<ObjectDataProvider x:Key="_objectDataProvider_maps" ObjectType="{x:Type local:MapSourceHandler}"
												  MethodName="GetMaps" IsAsynchronous="True"></ObjectDataProvider>
			<ObjectDataProvider x:Key="_objectDataProvider_mapsMode" ObjectType="{x:Type local:MapLoadingModeHelper}"
													MethodName="GetModes" IsAsynchronous="True"></ObjectDataProvider>

			<Style x:Key="_statusBarTextBlockStyle" TargetType="{x:Type TextBlock}">
				<Setter Property="Foreground" Value="White"></Setter>
				<Setter Property="FontSize" Value="12.4"></Setter>
				<Setter Property="FontFamily" Value="Microsoft YaHei"></Setter>
				<Setter Property="FontWeight" Value="Regular"></Setter>
				<Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
			</Style>

			<Style x:Key="_style_loacateTextBox" TargetType="{x:Type TextBox}">
				<Style.Triggers>
					<Trigger Property="Validation.HasError" Value="True">
						<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}"/>
					</Trigger>
				</Style.Triggers>
				<Setter Property="Width" Value="160"/>
				<Setter Property="Margin" Value="1"/>
			</Style>

			<HierarchicalDataTemplate DataType="{x:Type local:UserInfo}"
																ItemsSource="{Binding Path=MarkerList}">
				<Grid Margin="3">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Image Height="{StaticResource itemImageSize}"
									 Width="{StaticResource itemImageSize}"
									 SnapsToDevicePixels="False"
									 HorizontalAlignment="Center" VerticalAlignment="Center"
									 Source="/images/mapItemIcon.png">
					</Image>
					<TextBlock Grid.Column="1" Text="{Binding Path=IsLogin,Converter={StaticResource isLoginConverter}}"
										 Margin="3,0,0,0"
										 Foreground="{StaticResource treeViewItemForeGround}"
										 FontSize="{StaticResource treeViewHeaderItemFontSize}"/>
					<TextBlock Grid.Column="2" Text="{Binding Path=UserName}" Margin="8,0,0,0"
											 Foreground="{StaticResource treeViewItemForeGround}"
											 FontSize="{StaticResource treeViewHeaderItemFontSize}">
					</TextBlock>
				</Grid>
			</HierarchicalDataTemplate>
			<HierarchicalDataTemplate DataType="{x:Type local:MarkersWrapper}">
				<Grid Margin="3">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Image Source="{Binding Path=Type,Converter={StaticResource treeViewItemImageConvrter}}"
									 SnapsToDevicePixels="False"
									 Height="{StaticResource itemImageSize}"
									 Width="{StaticResource itemImageSize}"/>
					<TextBlock Margin="5,0,0,0"
											 Grid.Column="1"
											 Text="{Binding Path=Type,Converter={StaticResource typeConverter}}" 
											 Foreground="{StaticResource treeViewItemForeGround}"
											 FontSize="{StaticResource treeViewItemFontSize}"/>
					<TextBlock Grid.Column="2"
											Text="{Binding Path=Time,StringFormat={}{0:s}}" 
											Foreground="{StaticResource treeViewItemForeGround}"
											FontSize="{StaticResource treeViewItemFontSize}"
											Margin="8,0,0,0"/>
					<TextBlock Grid.Column="3"
											Text="{Binding Path=IsExistInMap,Converter={StaticResource isExistInMapConverter}}"
											Foreground="{StaticResource treeViewItemForeGround}"
											FontSize="{StaticResource treeViewItemFontSize}"
											Margin="8,0,0,0"/>
				</Grid>
			</HierarchicalDataTemplate>

			<!--TreeView样式-->
			<Style x:Key="DefaultTreeView" TargetType="{x:Type TreeView}">
				<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
				<Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
				<Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
				<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel IsItemsHost="True" IsVirtualizing="True" VirtualizationMode="Recycling"/>
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
				<EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
				<EventSetter Event="TreeViewItem.MouseRightButtonDown" Handler="TreeViewItem_MouseRightButtonDown"/>
			</Style>

			<Style x:Key="loginInformTextBox" TargetType="{x:Type TextBox}">
				<Setter Property="IsReadOnly" Value="True"/>
				<Setter Property="HorizontalAlignment" Value="Stretch"/>
				<Setter Property="FontSize" Value="14"/>
				<Setter Property="Margin" Value="13,0,0,0"/>
				<Setter Property="Foreground" Value="White"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="BorderThickness" Value="0"/>
			</Style>

			<Style x:Key="_style_inputBoxAndMeesageBox" TargetType="{x:Type TextBox}">
				<Setter Property="HorizontalAlignment" Value="Stretch"/>
				<Setter Property="VerticalAlignment" Value="Stretch"/>
				<Setter Property="FontSize" Value="12.4"/>
				<Setter Property="Margin" Value="3"/>
				<Setter Property="Foreground" Value="White"/>
				<Setter Property="Background" Value="{StaticResource backgroundColor}"/>
				<Setter Property="BorderThickness" Value="2"/>
				<Setter Property="TextWrapping" Value="Wrap"/>
				<Setter Property="BorderBrush" Value="#FF2CA1DF"/>
				<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
				<Setter Property="FontFamily" Value="Microsoft YaHei"/>
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
				<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
			</Style>
		</ResourceDictionary>
	</Window.Resources>
	<Window.Triggers>
		<EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="_toggleButton_openInputBox"/>
		<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
	</Window.Triggers>
	<Window.CommandBindings>
		<CommandBinding Command="local:AddRouteCommand.AddRoute"
										CanExecute="addRouteCommand_CanExecute"
										Executed="addRouteCommand_Executed"/>
		<CommandBinding Command="local:GetDirectDistanceCommand.GetDirectDistance"
										CanExecute="getDirectDistance_CanExecute"
										Executed="getDirectDistance_Executed"/>
		<CommandBinding Command="local:ReLoadMapCommand.ReloadMap"
										Executed="ReloadMap_Executed"/>
		<CommandBinding Command="local:LocateCommand.Locate"
										CanExecute="LocateCommand_CanExecute"
										/>
	</Window.CommandBindings>
	<Grid TextOptions.TextFormattingMode="Display">
		<Border Margin="4">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"></RowDefinition>
					<RowDefinition Height="Auto"></RowDefinition>
					<RowDefinition Height="*"></RowDefinition>
					<RowDefinition Height="Auto"></RowDefinition>
				</Grid.RowDefinitions>

				<Border x:Name="windowBackground" BorderBrush="#FF007ACC" BorderThickness="2" Background="#FF413A3A"
								Grid.Row="0" Grid.RowSpan="4">
					<Border.Effect>
						<DropShadowEffect ShadowDepth="0" BlurRadius="5"></DropShadowEffect>
					</Border.Effect>
				</Border>

				<!--****************************************************标题栏****************************************************-->
				<Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"></RowDefinition>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
					</Grid.ColumnDefinitions>

					<!--标题底色-->
					<Border Background="{Binding ElementName=windowBackground,Path=Background}" Margin="3" 
									Grid.Column="0" Grid.ColumnSpan="2" />

					<Grid Grid.Column="0" Grid.ColumnSpan="2">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"></RowDefinition>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"></ColumnDefinition>
							<ColumnDefinition Width="Auto"></ColumnDefinition>
						</Grid.ColumnDefinitions>
						<!--标题栏文字-->
						<TextBlock Grid.Column="0" Name="windowTitle" Foreground="White"
											 VerticalAlignment="Center" HorizontalAlignment="Left"
											 Text="{Binding ElementName=platformWindow,Path=Title}"
											 TextOptions.TextFormattingMode="Display"
											 Margin="8,0,0,0" FontWeight="Bold"
											 FontFamily="Microsoft YaHei" FontSize="12"/>

						<Border x:Name="windowTitleTab" Background="Transparent" 
										Grid.Column="0" Grid.ColumnSpan="4"
										MouseLeftButtonDown="TitleBar_MouseDown">
						</Border>

						<ctb:ControlButtons Grid.Column="1" Name="controlsButtons" 
																	OnClose="closeButton_Click"
																	OnMaximizeOrNormal="maximizeOrNormalButton_Click"
																	OnMinimize="minimizeButton_Click">
						</ctb:ControlButtons>
					</Grid>
				</Grid>

				<!--****************************************************状态栏****************************************************-->
				<Border Grid.Row="1" ClipToBounds="True">
					<r:Ribbon x:Name="ribbon" Grid.Row="1" Background="#FF9C9C9C" Margin="3,-22,3,0">
						<r:Ribbon.ApplicationMenu>
							<r:RibbonApplicationMenu SmallImageSource="icon.ico">
								<r:RibbonApplicationMenu.AuxiliaryPaneContent>
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition Height="*"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Image Grid.Row="0" Source="icon.ico" HorizontalAlignment="Center" VerticalAlignment="Center"
													 Width="80" Height="80" Margin="10"/>
										<TextBlock Grid.Row="1" Text="TinyPlatform" HorizontalAlignment="Center" VerticalAlignment="Center"
															 FontWeight="Bold" Margin="5" FontSize="20"/>
									</Grid>
								</r:RibbonApplicationMenu.AuxiliaryPaneContent>
								<r:RibbonApplicationMenuItem Header="关于" ToolTipTitle="关于作者"
																						 ImageSource="icon.ico"
																						 Click="aboutMe_Click"/>

								<r:RibbonSeparator/>
								<r:RibbonApplicationMenuItem Header="关闭" ImageSource="{StaticResource _drawingImage_closeButton}"
																						 Click="closeButton_Click"/>
								<r:RibbonApplicationMenuItem Header="退出" ImageSource="{StaticResource _drawingImage_exitButton}"
																						 Click="exitItem_Click"/>
							</r:RibbonApplicationMenu>
						</r:Ribbon.ApplicationMenu>
						<r:RibbonTab Header="控制" Margin="0">
							<r:RibbonGroup Header="控制面板">
								<r:RibbonToggleButton Label="消息面板" x:Name="_button_informPanel"
																			SmallImageSource="{StaticResource openPanelImage}" 
																			LargeImageSource="{StaticResource openPanelImage}"
																			Click="_button_informPanel_Click"
																			IsChecked="False">
								</r:RibbonToggleButton>
							</r:RibbonGroup>

							<r:RibbonGroup Header="地图" Margin="3,3,0,0">
								<r:RibbonControlGroup>
									<Label ToolTip="地图源" HorizontalAlignment="Center" VerticalAlignment="Center">
										<Label.Content>
											<Image Source="{StaticResource _drawingImage_loadMap}" Width="16" Height="16"></Image>
										</Label.Content>
									</Label>
									<ComboBox x:Name="_comboBox_mapSources" Width="180" 
														ItemsSource="{Binding Source={StaticResource _objectDataProvider_maps}}"
														SelectionChanged="_comboBox_mapSources_SelectionChanged"
														HorizontalContentAlignment="Stretch"
														ItemContainerStyle="{StaticResource _style_mapSelectionComboBox}"
														ItemTemplate="{StaticResource _dataTemplate_mapSelectionComboBox}"
														IsEditable="True" TextSearch.TextPath="ProviderName" IsReadOnly="True">
									</ComboBox>
								</r:RibbonControlGroup>
								<r:RibbonControlGroup Margin="0,3,0,0">
									<Label ToolTip="地图源加载模式" HorizontalAlignment="Center" VerticalAlignment="Center">
										<Label.Content>
											<Image Source="{StaticResource _drawingImage_accessMode}" Width="16" Height="16"></Image>
										</Label.Content>
									</Label>
									<ComboBox x:Name="_comboBox_mapAccessMode" Width="180"  
														ItemsSource="{Binding Source={StaticResource _objectDataProvider_mapsMode}}"
														DisplayMemberPath="ModeName"
														ItemContainerStyle="{StaticResource _style_mapAccessModeComboBoxItem}"
														IsEditable="True" IsReadOnly="True" TextSearch.TextPath="ModeName"
														SelectionChanged="_comboBox_mapAccessMode_SelectionChanged">
									</ComboBox>

									
								</r:RibbonControlGroup>
							</r:RibbonGroup>
							<r:RibbonGroup Header="地图功能" x:Name="_group_mapfunctions" Padding="3">
								<r:RibbonControlGroup Margin="3,3,0,3">
									<r:RibbonTwoLineText Text="Lat:" Margin="0,0,5,0"/>
									<TextBox x:Name="_ribbonTextBox_lat" HorizontalAlignment="Stretch"
																	 Text="{Binding Path=Lat,
										ValidatesOnNotifyDataErrors=True,NotifyOnValidationError=True,UpdateSourceTrigger=PropertyChanged}"
																	 Style="{StaticResource _style_loacateTextBox}" 
																	 />
								</r:RibbonControlGroup>

								<r:RibbonControlGroup Margin="3,0,0,3" BorderThickness="0">
									<r:RibbonTwoLineText Text="Lng:" />
									<TextBox x:Name="_ribbonTextBox_lng"
																	 Text="{Binding Path=Lng,
										ValidatesOnNotifyDataErrors=True,NotifyOnValidationError=True,UpdateSourceTrigger=PropertyChanged}"
																	 Style="{StaticResource _style_loacateTextBox}"/>
								</r:RibbonControlGroup>
								
								<r:RibbonGroup Margin="0,-3,0,0" Height="80" Width="60">
									<r:RibbonGroup.GroupSizeDefinitions>
										<r:RibbonGroupSizeDefinition IsCollapsed="True">
											<r:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="True"/>
											<r:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="True"/>
											<r:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="True"/>
										</r:RibbonGroupSizeDefinition>
									</r:RibbonGroup.GroupSizeDefinitions>
									<r:RibbonButton	Name="_button_locate" Label="定位" ToolTip="定位到指定的位置" 
																	SmallImageSource="{StaticResource _drawingImage_locate}" Margin="0,0,0,-4" 
																	Command="local:LocateCommand.Locate"
																	CommandTarget="{Binding ElementName=platformWindow}"
																	Click="_button_locate_Click"/>
									<r:RibbonButton	Name="_drawingImage_addMarker" Label="添加" ToolTip="添加新的指定坐标" 
																	SmallImageSource="{StaticResource _drawingImage_addMarker}" Margin="0,1,0,0" 
																	Command="local:LocateCommand.Locate"
																	CommandTarget="{Binding ElementName=platformWindow}"
																	Click="_drawingImage_addMarker_Click"/>
									<r:RibbonButton	Name="_button_reloadMap" Label="刷新" ToolTip="重新加载地图"
																	SmallImageSource="{StaticResource _drawingImage_reloadMap}" Margin="-48,38,48,-38"
																	Click="_button_reloadMap_Click"/>
								</r:RibbonGroup>

								<r:RibbonControlGroup>
									
								</r:RibbonControlGroup>
								<r:RibbonButton Label="添加路径" x:Name="_button_addRoute"
																SmallImageSource="{StaticResource _drawingBrush_addRouteIcon}"
																LargeImageSource="{StaticResource _drawingBrush_addRouteIcon}"
																CommandTarget="{Binding ElementName=platformWindow}"
																Command="local:AddRouteCommand.AddRoute"
																Click="_button_addRoute_Click">
								</r:RibbonButton>
								<r:RibbonButton Label="测距" x:Name="_button_getDirectDistance"
																SmallImageSource="{StaticResource _drawingImage_getDirectDistance}"
																LargeImageSource="{StaticResource _drawingImage_getDirectDistance}"
																CommandTarget="{Binding ElementName=platformWindow}"
																Command="local:GetDirectDistanceCommand.GetDirectDistance"
																Click="_button_getDirectDistance_Click"/>
								<r:RibbonToggleButton Label="拖拽控制" x:Name="_toggleButton_allowDrag"
																			IsChecked="False"
																			ToolTip="不允许拖拽markers"
																			SmallImageSource="{StaticResource _drawingImage_dragControl}"
																			LargeImageSource="{StaticResource _drawingImage_dragControl}"
																			Click="_toggleButton_allowDrag_Click"/>
							</r:RibbonGroup>

							<r:RibbonGroup Header="用户">
								<r:RibbonButton Name="_button_login" Label="登陆" 
																	SmallImageSource="{StaticResource loginIcon}" 
																	LargeImageSource="{StaticResource loginIcon}"
																	Click="loginButton_Click"/>
								<r:RibbonButton	Name="_button_logout" Label="退出登录" 
																	SmallImageSource="{StaticResource logoutIcon}" 
																	LargeImageSource="{StaticResource logoutIcon}"
																	IsEnabled="False"
																	Click="_button_logout_Click"/>
								<r:RibbonButton	Name="_button_saveLog" Label="保存日志" 
																SmallImageSource="{StaticResource _drawingImage_saveLogIcon}" 
																LargeImageSource="{StaticResource _drawingImage_saveLogIcon}"
																Click="_button_saveLog_Click"/>
								<r:RibbonCheckBox x:Name="_checkBox_allowAutoReconnect" Label="掉线重连" 
																	
																	Click="_checkBox_allowAutoReconnect_Checked"
																	IsChecked="True"/>
							</r:RibbonGroup>
						</r:RibbonTab>
					</r:Ribbon>
				</Border>

				<Grid Grid.Row="2" Margin="3,3,3,0" >
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1.7*"/>
					</Grid.ColumnDefinitions>
					<gmap:GMapControl Grid.Column="0" Grid.ColumnSpan="2" 
														x:Name="mapMainWindow"
														MinZoom="4" MaxZoom="21"
														VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
														MouseMove="mapMainWindow_MouseMove" 
														MouseDoubleClick="mapMainWindow_MouseLeftButtonDown">
					</gmap:GMapControl>

					<Border Grid.Column="0" x:Name="_border_informPanel">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>

							<Grid Grid.Row="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Border Grid.Column="0" Grid.ColumnSpan="3" Background="Black" Opacity="0.7"/>

								<Image Height="30" Width="30" Margin="15,3,0,3"
											 Source="{StaticResource _drawingImage_loginInform}"/>
								<TextBlock Grid.Column="1" Grid.ColumnSpan="2" FontSize="15" Text="未登录"
													 Visibility="Visible"
													 x:Name="_textBlock_waitingLogin"
													 HorizontalAlignment="Center"
													 VerticalAlignment="Center"
													 Foreground="White"/>
								<Grid Grid.Column="1" Grid.ColumnSpan="2"
											HorizontalAlignment="Stretch" VerticalAlignment="Center"
											Margin="11,5,5,5"
											Visibility="Collapsed"
											x:Name="_grid_loginInformPanel">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>

									<TextBlock Text="用户名：" Foreground="White" FontSize="15"/>
									<TextBox Grid.Column="1" x:Name="_textbox_userName" Style="{StaticResource loginInformTextBox}"
													 Text="{Binding Path=TeminalName}"/>
									<TextBlock Grid.Column="2" Text="IP：" Foreground="White" FontSize="15"/>
									<TextBox Grid.Column="3" x:Name="_textBox_IP" Style="{StaticResource loginInformTextBox}"
													 Text="{Binding Path=TeminalIp}"/>
								</Grid>
							</Grid>
							
							<Grid Grid.Row="1" x:Name="_grid_infromPanel" Visibility="Visible">
								<Grid.RowDefinitions>
									<RowDefinition Height="3*"/>
									<RowDefinition Height="3*"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<Border Grid.Row="0" Grid.RowSpan="4" Background="Black" Opacity="0.7"/>

								<TreeView x:Name="_treeView_markers"
													Background="#FF4E4E4E" Margin="3" BorderThickness="2" Foreground="White" BorderBrush="#FF2CA1DF"
													SelectedItemChanged="_treeView_markers_SelectedItemChanged"
													Style="{StaticResource DefaultTreeView}"
													LostFocus="_treeView_markers_LostFocus">
									<TreeView.ItemContainerStyleSelector>
										<local:IsLoginItemStyleSelector DefaultStyle="{StaticResource DefaultTreeViewItem}"
																										LoginStyle="{StaticResource LogoutTreeViewItem}"
																										PropertyToEvaluate="IsLogin">
										</local:IsLoginItemStyleSelector>
									</TreeView.ItemContainerStyleSelector>
								</TreeView>
								<TextBox x:Name="msgBox" Grid.Row="1" Grid.Column="0" Style="{StaticResource _style_inputBoxAndMeesageBox}"
												 IsReadOnly="True"/>
								<TextBox x:Name="inputMsgBox" Grid.Row="2" Grid.Column="0" Style="{StaticResource _style_inputBoxAndMeesageBox}"
												 PreviewKeyDown="inputMsgBox_PreviewKeyDown"
												 IsEnabled="{Binding Path=IsLogin}"
												 Visibility="Collapsed"/>

								<StackPanel Grid.Row="3" Margin="3" Orientation="Horizontal" HorizontalAlignment="Right">
									<ToggleButton x:Name="_toggleButton_openInputBox" Content="打开输入框" HorizontalAlignment="Right"
																Click="_toggleButton_openInputBox_Click" Style="{DynamicResource _style_toggleButton_openInputBox}"/>
									<Button Content="清屏" Click="clearMessageBoxClick" HorizontalAlignment="Right" 
													Style="{StaticResource _style_button_openInputBox}"/>
									<Button Content="保存日志" Click="saveMessageClick" HorizontalAlignment="Right"
													Style="{StaticResource _style_button_openInputBox}"/>
									<Button Content="发送消息"  Click="sendMsgBtn_Click" HorizontalAlignment="Right"
													Style="{StaticResource _style_button_openInputBox}"
													IsEnabled="{Binding Path=IsLogin}"/>
								</StackPanel>
							</Grid>
						</Grid>
					</Border>
					
					<Border CornerRadius="5" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="0,10,20,10"
									Background="#FF423F3F" Opacity="0.8">
						<Grid >
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>

							<Button x:Name="_button_zoomOut"
											Grid.Row="0" Width="30" Height="30" Template="{DynamicResource _controlTemplate_zoomButton}"
											Margin="3,8,3,3" Background="{StaticResource _drawingBrush_zoomOut}"
											Click="_button_zoomOut_Click"/>

							<Slider Grid.Row="1" Orientation="Vertical" Margin="8,5,5,5" IsSnapToTickEnabled="True" Foreground="White" 
											Value="{Binding ElementName=mapMainWindow,Path=Zoom,Mode=TwoWay}"
											Minimum="{Binding ElementName=mapMainWindow,Path=MinZoom,Mode=OneWay}"
											Maximum="{Binding ElementName=mapMainWindow,Path=MaxZoom,Mode=OneWay}"/>
							<Button x:Name="_button_zoomIn"
											Grid.Row="2" Width="30" Height="30" Template="{DynamicResource _controlTemplate_zoomButton}"
											Margin="3,3,3,8" Background="{StaticResource _drawingBrush_zoomIn}"
											Click="_button_zoomIn_Click"/>
						</Grid>
					</Border>
				</Grid>

				<StatusBar Grid.Row="3" Background="{Binding ElementName=windowBackground,Path=Background}" Margin="3">
					<StatusBar.ItemsPanel>
						<ItemsPanelTemplate>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"></RowDefinition>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="*"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="35"></ColumnDefinition>
									<ColumnDefinition Width="120"></ColumnDefinition>
									<ColumnDefinition Width="35"></ColumnDefinition>
									<ColumnDefinition Width="120"></ColumnDefinition>
								</Grid.ColumnDefinitions>
							</Grid>
						</ItemsPanelTemplate>
					</StatusBar.ItemsPanel>

					<StatusBarItem Grid.Column="0">
						<TextBlock x:Name="_satusBar_message" Style="{StaticResource _statusBarTextBlockStyle}"/>
					</StatusBarItem>
					<StatusBarItem Grid.Column="2">
						<TextBlock Style="{StaticResource _statusBarTextBlockStyle}" >当前坐标：</TextBlock>
					</StatusBarItem>
					<StatusBarItem Grid.Column="3">
						<TextBlock Style="{StaticResource _statusBarTextBlockStyle}">Lat：</TextBlock>
					</StatusBarItem>
					<StatusBarItem Grid.Column="4">
						<TextBlock Style="{StaticResource _statusBarTextBlockStyle}" HorizontalAlignment="Left" x:Name="textBlock_Lat"></TextBlock>
					</StatusBarItem>
					<StatusBarItem Grid.Column="5">
						<TextBlock Style="{StaticResource _statusBarTextBlockStyle}">Lng：</TextBlock>
					</StatusBarItem>
					<StatusBarItem Grid.Column="6">
						<TextBlock Style="{StaticResource _statusBarTextBlockStyle}" HorizontalAlignment="Left"  x:Name="textBlock_Lng"></TextBlock>
					</StatusBarItem>
				</StatusBar>

				<Rectangle x:Name="rightBorder" Width="5" 
									 Grid.Row="1" Grid.RowSpan="2"
									 Cursor="SizeWE" 
									 Fill="Transparent" 
									 HorizontalAlignment="Right" VerticalAlignment="Stretch"
									 MouseLeftButtonDown="window_initateWidden" 
									 MouseLeftButtonUp="window_endWiden"
									 MouseMove="window_weBorder_widden"/>
				<Rectangle x:Name="leftBorder" Width="5" 
									 Grid.Row="1" Grid.RowSpan="2" Cursor="SizeWE" Grid.Column="0"
									 Fill="Transparent" 
									 HorizontalAlignment="Left" VerticalAlignment="Stretch"
									 MouseLeftButtonDown="window_initateWidden" 
									 MouseLeftButtonUp="window_endWiden"
									 MouseMove="window_weBorder_widden"/>
				<Rectangle x:Name="topBorder" Height="5" 
									 Grid.Row="0" Cursor="SizeNS"
									 Fill="Transparent" 
									 MouseLeftButtonDown="window_initateWidden" 
									 MouseLeftButtonUp="window_endWiden"
									 MouseMove="window_nsBorder_widden"
									 HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
				<Rectangle x:Name="buttomBorder" Height="5" 
									 Grid.Row="3"
									 Cursor="SizeNS"
									 Fill="Transparent" 
									 HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
									 MouseLeftButtonDown="window_initateWidden" 
									 MouseLeftButtonUp="window_endWiden"
									 MouseMove="window_nsBorder_widden"/>
			</Grid>
		</Border>
	</Grid>
</Window>
